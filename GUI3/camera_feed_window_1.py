# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'camera_feed_window_1.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from __future__ import print_function
from PyQt5 import QtCore, QtGui, QtWidgets

from subprocess import Popen,PIPE
from PyQt5.QtGui import *
from PyQt5.QtCore import *
import os
import sys
import cv2
import rospy
from PyQt5.QtGui import QImage,QPixmap
from PyQt5.QtCore import pyqtSlot
from cv_bridge import CvBridge, CvBridgeError
from sensor_msgs.msg import Image


class Ui_MainWindow1(object):
    def setup(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowTitle("Database results")
        MainWindow.resize(775, 623)
        MainWindow.setStyleSheet("background-color: rgb(46, 52, 54);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, -10, 111, 611))
        self.label_2.setStyleSheet("background-color: rgb(3, 9, 27);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.camera_feed_1 = QtWidgets.QLabel(self.centralwidget)
        self.camera_feed_1.setGeometry(QtCore.QRect(120, 10, 321, 261))
        self.camera_feed_1.setStyleSheet("background-color: rgb(238, 238, 236);")
        self.camera_feed_1.setText("")
        self.camera_feed_1.setObjectName("camera_feed_1")
        self.camera_feed_2 = QtWidgets.QLabel(self.centralwidget)
        self.camera_feed_2.setGeometry(QtCore.QRect(450, 10, 311, 261))
        self.camera_feed_2.setStyleSheet("background-color: rgb(238, 238, 236);")
        self.camera_feed_2.setText("")
        self.camera_feed_2.setObjectName("camera_feed_2")
        self.camera_feed_4 = QtWidgets.QLabel(self.centralwidget)
        self.camera_feed_4.setGeometry(QtCore.QRect(450, 310, 311, 261))
        self.camera_feed_4.setStyleSheet("background-color: rgb(238, 238, 236);")
        self.camera_feed_4.setText("")
        self.camera_feed_4.setObjectName("camera_feed_4")
        self.camera_label_1 = QtWidgets.QLabel(self.centralwidget)
        self.camera_label_1.setGeometry(QtCore.QRect(230, 280, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.camera_label_1.setFont(font)
        self.camera_label_1.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.camera_label_1.setObjectName("camera_label_1")
        self.camera_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.camera_label_2.setGeometry(QtCore.QRect(570, 280, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.camera_label_2.setFont(font)
        self.camera_label_2.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.camera_label_2.setObjectName("camera_label_2")
        self.camera_label_3 = QtWidgets.QLabel(self.centralwidget)
        self.camera_label_3.setGeometry(QtCore.QRect(240, 580, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.camera_label_3.setFont(font)
        self.camera_label_3.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.camera_label_3.setObjectName("camera_label_3")
        self.camera_label_4 = QtWidgets.QLabel(self.centralwidget)
        self.camera_label_4.setGeometry(QtCore.QRect(580, 580, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.camera_label_4.setFont(font)
        self.camera_label_4.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.camera_label_4.setObjectName("camera_label_4")
        self.camera_button_1 = QtWidgets.QPushButton(self.centralwidget)
        self.camera_button_1.setGeometry(QtCore.QRect(10, 24, 89, 81))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.camera_button_1.setFont(font)
        self.camera_button_1.setStyleSheet("background-color: rgb(237, 212, 0);")
        self.camera_button_1.setObjectName("camera_button_1")
        self.quit_button = QtWidgets.QPushButton(self.centralwidget)
        self.quit_button.setGeometry(QtCore.QRect(20, 560, 80, 25))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.quit_button.setFont(font)
        self.quit_button.setStyleSheet("background-color: rgb(204, 0, 0);")
        self.quit_button.setObjectName("quit_button")
        self.camera_button_2 = QtWidgets.QPushButton(self.centralwidget)
        self.camera_button_2.setGeometry(QtCore.QRect(10, 120, 89, 81))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.camera_button_2.setFont(font)
        self.camera_button_2.setStyleSheet("background-color: rgb(237, 212, 0);")
        self.camera_button_2.setObjectName("camera_button_2")
        self.camera_button_3 = QtWidgets.QPushButton(self.centralwidget)
        self.camera_button_3.setGeometry(QtCore.QRect(10, 220, 89, 81))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.camera_button_3.setFont(font)
        self.camera_button_3.setStyleSheet("background-color: rgb(237, 212, 0);")
        self.camera_button_3.setObjectName("camera_button_3")
        self.camera_button_4 = QtWidgets.QPushButton(self.centralwidget)
        self.camera_button_4.setGeometry(QtCore.QRect(10, 320, 89, 81))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setBold(True)
        font.setWeight(75)
        self.camera_button_4.setFont(font)
        self.camera_button_4.setStyleSheet("background-color: rgb(237, 212, 0);")
        self.camera_button_4.setObjectName("camera_button_4")
        self.camera_feed_3 = QtWidgets.QLabel(self.centralwidget)
        self.camera_feed_3.setGeometry(QtCore.QRect(120, 310, 321, 261))
        self.camera_feed_3.setStyleSheet("background-color: rgb(238, 238, 236);")
        self.camera_feed_3.setText("")
        self.camera_feed_3.setObjectName("camera_feed_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.logic=0
        self.action()

    def quit_window(self):
        MainWindow.close()    

    def action(self):
        self.camera_button_1 .clicked.connect(self.show1)
        self.camera_button_2.clicked.connect(self.show2)
        self.quit_button.clicked.connect(self.quit_window)  
        
    def __init__(self):
        self.bridge = CvBridge()
        self.image_sub = rospy.Subscriber("/bot/camera1/image_raw",Image,self.displayImage2)

    def show1(self):
        #self.textBrowser_camera1.setText('you can take ss ')
        cap=cv2.VideoCapture(0)
        while(cap.isOpened()):
            ret,frame=cap.read()
            #frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            if ret == True:
                self.displayImage(frame)
                cv2.waitKey()
        cap.release()
        cv2.destroyAllWindows()  

    def displayImage(self,img):
        qformat=QImage.Format_Indexed8

        img= cv2.resize(img, (321,261), interpolation = cv2.INTER_AREA)
        img=QImage(img,img.shape[1],img.shape[0],QImage.Format_RGB888)
        #img=img.rgbSwapped()
        self.camera_feed_1.setPixmap(QPixmap.fromImage(img))    

    def show2(self):
        if self.logic==0:
            self.logic=1
        else:
            self.logic=0
    def displayImage2(self,data):
        self.bridge_object = CvBridge()
        try:
        # We select bgr8 because its the OpenCV encoding by default
            cv_image_2 = self.bridge_object.imgmsg_to_cv2(data,desired_encoding="bgr8")
        except CvBridgeError as e:
            print(e)
        cv_image_2= cv2.resize(cv_image_2 ,(311,261), interpolation = cv2.INTER_AREA)
        cv_image_2=QImage(cv_image_2,cv_image_2.shape[1],cv_image_2.shape[0],QImage.Format_RGB888)
        cv_image_2=cv_image_2.rgbSwapped()  
        if self.logic==1:
            self.camera_feed_2.setPixmap(QPixmap.fromImage(cv_image_2))
        else:
            pass   

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.camera_label_1.setText(_translate("MainWindow", "   Camera 1 "))
        self.camera_label_2.setText(_translate("MainWindow", "   Camera 2"))
        self.camera_label_3.setText(_translate("MainWindow", "   Camera 3"))
        self.camera_label_4.setText(_translate("MainWindow", "   Camera 4"))
        self.camera_button_1.setText(_translate("MainWindow", "Camera 1"))
        self.quit_button.setText(_translate("MainWindow", "Quit"))
        self.camera_button_2.setText(_translate("MainWindow", "Camera 2"))
        self.camera_button_3.setText(_translate("MainWindow", "Camera 3"))
        self.camera_button_4.setText(_translate("MainWindow", "Camera 4"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    cmd="roscore"
    Popen(cmd,shell=True,stdout=PIPE,stderr=PIPE)
    print("--> starting roscore")
    rospy.init_node('image_converter', anonymous=True)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow1()
    ui.setup(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
